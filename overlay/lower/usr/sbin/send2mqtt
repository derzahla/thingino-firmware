#!/bin/env sh
# Sends data to MQTT server
# https://docs.oasis-open.org/mqtt/mqtt/v5.0/mqtt-v5.0.html
# https://mosquitto.org/documentation/

. /usr/share/common

show_help() {
	echo "Usage: $0 [options]
Where:
	-h host      Server host.
	-j           Message is JSON.
	-m message   Message body.
	-s           Send a snapshot.
	-t topic     Topic.
	-u username  Username.
	-w password  Password.
	-v           Verbose output.
" >&2
	exit 0
}

verbosity="false"
while getopts h:jm:st:u:w:v flag; do
	case "$flag" in
		h) mqtt_host=$OPTARG ;;
		j) mqtt_is_json="true" ;;
		m) mqtt_message=$OPTARG ;;
		s) mqtt_send_snap="true" ;;
		t) mqtt_topic=$OPTARG ;;
		u) mqtt_username=$OPTARG ;;
		w) mqtt_password=$OPTARG ;;
		v) verbosity="true" ;;
		*) show_help ;;
	esac
done

if [ -z "$mqtt_host" ]; then
	echo_error "MQTT broker host is not set"
	exit 1
fi

if [ -z "$mqtt_port" ]; then
	echo_error "MQTT broker port is not set"
	exit 1
fi

if [ -z "$mqtt_topic" ]; then
	echo_error "MQTT topic not found"
	exit 1
fi

if [ -z "$mqtt_message" ]; then
	echo_error "MQTT message template not found"
	exit 1
fi

if [ "true" = "$mqtt_send_snap" ] && [ -z "$mqtt_snap_topic" ]; then
	echo_error "MQTT topic for sending snapshot not found in config"
	exit 1
fi

if [ -z "$mqtt_client_id" ]; then
	mqtt_client_id="$network_hostname"
fi

mqtt_message=$(date +"$mqtt_message")

command="mosquitto_pub -h $mqtt_host -p $mqtt_port -i $mqtt_client_id"
if [ "true" = "$verbosity" ]; then
	command="$command -d"
fi

if [ -n "$mqtt_username" ]; then
	command="$command -u $mqtt_username"
fi

if [ -n "$mqtt_password" ]; then
	command="$command -P $mqtt_password"
fi

if [ "true" = "$mqtt_send_snap" ]; then
	attachment=$(mktemp -u).jpg
	cp -f "$SNAPSHOT_FILE" "$attachment"
	command="$command -t $mqtt_snap_topic -f \"$attachment\""
else
	if [ "true" = "$mqtt_is_json" ]; then
		tmpfile=$(mktemp)
		echo "$mqtt_message" > $tmpfile
		command="$command -t $mqtt_topic -f $tmpfile"
	else
		command="$command -t $mqtt_topic -m '$mqtt_message'"
	fi
fi

if [ "true" = "$verbosity" ]; then
	echo_command "$command"
fi

if ! sh -c "$command"; then
	echo_error "Failed to send MQTT message"
	exit 1
fi

if [ -f "$tmpfile" ]; then
	rm "$tmpfile"
fi

if [ -f "$attachment" ]; then
	rm "$attachment"
fi

exit 0
